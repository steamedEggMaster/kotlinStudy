plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('ioCloudVersion', "2.4.2") // embedded S3 version 설정 시 사용할 property 값 설정
}

repositories {
    mavenCentral()
    //google()
}

dependencies {

    // https://mvnrepository.com/artifact/io.github.serpro69/kotlin-faker
    implementation group: 'io.github.serpro69', name: 'kotlin-faker', version: '1.15.0'

    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
    //출처: https://curiousjinan.tistory.com/entry/spring-boot-3-p6spy-jpa-logging [개발자의 서랍:티스토리]

    // https://mvnrepository.com/artifact/io.github.microutils/kotlin-logging
    implementation group: 'io.github.microutils', name: 'kotlin-logging', version: '2.1.23'

    // 출처 : https://devconf.tistory.com/90
    implementation("com.linecorp.kotlin-jdsl:spring-data-kotlin-jdsl-starter-jakarta:2.2.1.RELEASE")

    // AOP 프로그래밍 (Aspect)
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    //----------JWT-----------
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // https://mvnrepository.com/artifact/com.auth0/java-jwt
    implementation group: 'com.auth0', name: 'java-jwt', version: '3.19.2'
    //------------------------

    // -------------------Redis + Cache-------------------
    // https://mvnrepository.com/artifact/net.jodah/expiringmap
    implementation group: 'net.jodah', name: 'expiringmap', version: '0.5.10'
    // https://mvnrepository.com/artifact/it.ozimov/embedded-redis
    implementation(group: 'it.ozimov', name: 'embedded-redis', version: '0.7.3') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    // 로컬에서 서버 설치 없이 사용하는 expiringmap같은 역할을 하는 Redis
    // 서버 설치가 뭐하기 때문에 이걸 일단 사용
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // https://mvnrepository.com/artifact/com.github.okihouse/autocomplete
    // redis를 활용한 검색어 자동완성 기능을 위한 의존성
    implementation group: 'com.github.okihouse', name: 'autocomplete', version: '1.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    // https://mvnrepository.com/artifact/com.github.ben-manes.caffeine/caffeine
    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.1.8'
    // --------------------------------------------

    // 실제 S3 없이, 로컬에서 S3가 있는 것처럼 수행하기 ---------------------------------------------------------
    implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:${property("ioCloudVersion")}")
    implementation 'io.awspring.cloud:spring-cloud-starter-aws'
    // https://mvnrepository.com/artifact/io.findify/s3mock
    implementation group: 'io.findify', name: 's3mock_2.13', version: '0.2.6'
    //----------------------------------------------------------------------------------------------------

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    //testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    //testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

